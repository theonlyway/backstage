name: Build and Push Backstage

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
    branches:
        - main
  release:
    types: [published]

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: backstage

jobs:
  semver:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    outputs:
      current_version: ${{ steps.semver.outputs.current }}
      next_version: ${{ steps.semver.outputs.nextStrict }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get Next Version
      id: semver
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ github.token }}
        branch: ${{ github.head_ref || github.ref_name }}
        patchAll: true
        majorList: "breaking,major"
        fallbackTag: "0.0.0"
        noVersionBumpBehavior: "patch"

  build-ghcr:
    needs: [semver]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set Environment Variables
      run: echo "REPOSITORY_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build and Push Docker Image using Makefile
      run: |
        make docker-build VERSION=${{ needs.semver.outputs.next_version }} REGISTRY=${{ env.GHCR_REGISTRY }} REPOSITORY_OWNER=${{ env.REPOSITORY_OWNER }} IMAGE_NAME=${{ env.IMAGE_NAME }}
      env:
        GHCR_REGISTRY: ${{ env.GHCR_REGISTRY }}
        REPOSITORY_OWNER: ${{ env.REPOSITORY_OWNER }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        VERSION: ${{ needs.semver.outputs.next_version }}

    - name: Build and Push Debug Docker Image using Makefile
      run: |
        make docker-build-debug VERSION=${{ needs.semver.outputs.next_version }} REGISTRY=${{ env.GHCR_REGISTRY }} REPOSITORY_OWNER=${{ env.REPOSITORY_OWNER }} IMAGE_NAME=${{ env.IMAGE_NAME }}
      env:
        GHCR_REGISTRY: ${{ env.GHCR_REGISTRY }}
        REPOSITORY_OWNER: ${{ env.REPOSITORY_OWNER }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        VERSION: ${{ needs.semver.outputs.next_version }}

  build-ghcr-debug:
    needs: [semver]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set Environment Variables
      run: echo "REPOSITORY_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build and Push Debug Docker Image using Makefile
      run: |
        make docker-build-debug VERSION=${{ needs.semver.outputs.next_version }} REGISTRY=${{ env.GHCR_REGISTRY }} REPOSITORY_OWNER=${{ env.REPOSITORY_OWNER }} IMAGE_NAME=${{ env.IMAGE_NAME }}
      env:
        GHCR_REGISTRY: ${{ env.GHCR_REGISTRY }}
        REPOSITORY_OWNER: ${{ env.REPOSITORY_OWNER }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        VERSION: ${{ needs.semver.outputs.next_version }}

  release:
    needs: [semver, build-ghcr]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Create Release
      uses: softprops/action-gh-release@v2
      id: release
      with:
        draft: false
        prerelease: false # Ensure the release is marked as published
        make_latest: true
        name: ${{ needs.semver.outputs.next_version }}
        tag_name: ${{ needs.semver.outputs.next_version }}

    - name: Trigger Changelog Workflow
      run: |
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/dispatches \
        -d '{"event_type":"update_changelog","client_payload":{"tag_name":"${{ needs.semver.outputs.next_version }}"}}'

  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    if: failure()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Check and Delete Docker Image from GHCR
        run: |
          FULL_IMAGE=${{ env.GHCR_REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}
          IMAGE="${FULL_IMAGE}:${{ needs.semver.outputs.next_version }}"
          if docker manifest inspect $IMAGE > /dev/null 2>&1; then
            echo "Docker image $IMAGE exists in GHCR. Deleting..."
            curl -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "${{ env.GHCR_REGISTRY }}/v2/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}/manifests/${{ needs.semver.outputs.next_version }}"
          else
            echo "Docker image $IMAGE does not exist in GHCR. Skipping deletion."
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check and Delete Docker Image from Docker Hub
        run: |
          FULL_IMAGE=${{ env.DOCKERHUB_OWNER }}/${{ env.IMAGE_NAME }}
          IMAGE="${FULL_IMAGE}:${{ needs.semver.outputs.next_version }}"
          if docker manifest inspect $IMAGE > /dev/null 2>&1; then
            echo "Docker image $IMAGE exists in Docker Hub. Deleting..."
            curl -X DELETE -u "${{ vars.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_TOKEN }}" \
              "https://hub.docker.com/v2/repositories/${{ env.DOCKERHUB_OWNER }}/${{ env.IMAGE_NAME }}/tags/${{ needs.semver.outputs.next_version }}/"
          else
            echo "Docker image $IMAGE does not exist in Docker Hub. Skipping deletion."
          fi

      - uses: ClementTsang/delete-tag-and-release@v0.3.1
        with:
          delete_release: true # default: false
          tag_name: v${{ needs.semver.outputs.next_version }} # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Reset Branch to Initial Commit
        run: |
          git fetch origin
          git reset --hard ${{ github.sha }}
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git push --force origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
